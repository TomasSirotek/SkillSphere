name: Build

on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.scripts/**'
      - .gitignore
      - CODE_OF_CONDUCT.md
      - LICENSE
      - README.md

  workflow_call:
    inputs:
      build-artifacts:
        type: boolean
        required: true
        default: false

jobs:
  build-backend:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Checkout code

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install .NET
        uses: actions/setup-dotnet@v3

      - name: Restore solution
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Test solution
        run: dotnet test --no-build -c Release --verbosity normal
          /p:CollectCoverage=true
          /p:Include="[skillSphere.Domain]*?%2c[skillSphere.Application]*?%2c[skillSphere.Infrastructure]*?%2c[skillSphere.Web]*"
          /p:CoverletOutput=.coverage/
          /p:CoverletOutputFormat=lcov
      
      # Upload to the coverage        
      - name: DomainUnitTests Report Upload
        uses: coverallsapp/github-action@v2.2.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: DomainUnitTests
          path-to-lcov: tests/Domain.UnitTests/.coverage/coverage.info
          parallel: true

      - name: ApplicationUnitTests Report Upload
        uses: coverallsapp/github-action@v2.2.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ApplicationUnitTests
          path-to-lcov: tests/Application.UnitTests/.coverage/coverage.info
          parallel: true

      - name: ApplicationFunctionalTests Report Upload
        uses: coverallsapp/github-action@v2.2.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ApplicationFunctionalTests
          path-to-lcov: tests/Application.FunctionalTests/.coverage/coverage.info
          parallel: true

      - name: InfrastructureIntegrationTests Report Upload
        uses: coverallsapp/github-action@v2.2.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: InfrastructureIntegrationTests
          path-to-lcov: tests/Infrastructure.IntegrationTests/.coverage/coverage.info
          parallel: true

      - name: Conclude Coverage Upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

      - name: Publish website
        if: ${{ inputs.build-artifacts == true }}
        run: |
          dotnet publish --configuration Release --runtime win-x86 --self-contained --output ./publish
          cd publish
          zip -r ./publish.zip .
        working-directory: ./src/Web/

      - name: Upload website artifact (website)
        if: ${{ inputs.build-artifacts == true }}
        uses: actions/upload-artifact@v3
        with:
          name: website
          path: ./src/Web/publish/publish.zip
          if-no-files-found: error

      - name: Create EF Core migrations bundle
        if: ${{ inputs.build-artifacts == true }}
        run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-ef
          dotnet ef migrations bundle --configuration Release -p ./src/Infrastructure/ -s ./src/Web/ -o efbundle.exe
          zip -r ./efbundle.zip efbundle.exe
        env:
          SkipNSwag: True

      - name: Upload EF Core migrations bundle artifact (efbundle)
        if: ${{ inputs.build-artifacts == true }}
        uses: actions/upload-artifact@v3
        with:
          name: efbundle
          path: ./efbundle.zip
          if-no-files-found: error

  build-ui:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies Node
      run: npm ci

    - name: Build Angular App
      run: npm run build

    - name: Run test with coverage
      run: npm run test:prod

